// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  // User-specific fields
  points        Int       @default(0)
  completedChallenges Challenge[]
  submissions   Submission[]
}

model Challenge {
  id            String   @id @default(cuid())
  title         String
  description   String
  difficulty    String
  points        Int
  startsAt      DateTime
  endsAt        DateTime
  participants  User[]
}

model Problem {
  id            String   @id @default(cuid())
  title         String
  description   String
  difficulty    String
  category      String
  testCases     String
  solution      String
  submissions   Submission[]
}

model Submission {
  id            String   @id @default(cuid())
  userId        String
  problemId     String
  code          String
  language      String
  status        String
  points        Int
  submittedAt   DateTime @default(now())
  
  user          User     @relation(fields: [userId], references: [id])
  problem       Problem  @relation(fields: [problemId], references: [id])
}
